wk6-prez
========================================================
author: Steele H. Valenzuela
date: 10/20/15

Let's Set Up for Today
========================================================

Go to the following repo and download the following:
**github.com/shv38339/statcomp597d**

- *predictvals.R*
- *eqn.R*

Next, install and upload the following libraries:

```{r}
library(gcookbook); library(ggplot2)
library(nycflights13); library(dplyr)
library(broom); library(lubridate)
```

And rename the following data sets

```{r}
htwt <- heightweight # from the gcookbook library
flts <- flights # from the nycflights13 library
```

Predicted Values
========================================================

What if you want to add your own prediction line to a plot?
```{r}
sp <- ggplot(data = htwt, aes(x = ageYear, y = heightIn)) + 
      geom_point(colour = "grey40")
```
```{r}
model <- lm(heightIn ~ ageYear, data = htwt)
# summary(model)

source(file = "predictvals.R")
lin.pred <- predictvals(model, "ageYear", "heightIn")
```
When you reach the end, output the first 6 values of **lin.pred**.

Annotated Text to a plot
========================================================

How would you find the $R^2$ value of a linear model?
```{r, eval = FALSE}
sp + annotate("text", label = "r^2 = ???", x = Inf, y = -Inf, hjust = 1.1, vjust = -.5)
source(file = "eqn.R")
sp + annotate("text", label = eqn, parse = TRUE, x = Inf, y = -Inf, hjust = 1.1, vjust = -.5)
```

Exercise 1
=======================================================

1. Create a quadratic model from the `heightweight` data set
2. Create a scatterplot with a fitted quadratic model
3. Insert the coefficient values & $R^2$ value as annotated text (Hint: will have to edit file `eqn.R`)
4. Change the name of the axes and add a title


Quick Overview of Broom
=======================================================

How did we extract the $R^2$ value earlier?

- `tidy(...)`
- `augment(...)`
- `glance(...)`


dplyr
=======================================================

Let's check out the flights data set
```{r, eval = FALSE}
dim(flights)
head(flights)
```
In base `R`, how would you find all flights on December 25th?


dplyr Data Format
=======================================================

When working with `dplyr`, save data sets as follows:
```{r, eval = FALSE}
data.df <- tbl_df(data) 
```
There's also no harm in saving over the object itself...or is there?


arrange(...) & select(...)
=======================================================

```{r}
arrange(flights, year, desc(month), desc(day))

select(flights, carrier:air_time)
select(flights, -(year:carrier))
```

mutate(...)
=======================================================

```{r}
htwt1 <- mutate(htwt, bmi = 703*(weightLb/(heightIn^2)))
head(htwt1)

head(transmute(htwt, bmi = 703*(weightLb/heightIn^2)))
```


summarise(...)
=======================================================

```{r}
summarise(flights, avg.dist = mean(distance))

gender <- group_by(htwt, sex)
summarise(gender, avg.Lb = mean(weightLb), avg.In = mean(heightIn))
```


Pipe Operator %>%
=======================================================

```{r}
pipe1 <- htwt %>% 
          group_by(sex) %>% 
            summarise(avg.Lb = mean(weightLb), 
                      avg.In = mean(heightIn))
pipe1
```


Nested functions
=======================================================

```{r}
filter(
  summarise(
    select(
      group_by(flights, year, month, day),
      arr_delay, dep_delay
    ),
    arr = mean(arr_delay, na.rm = TRUE),
    dep = mean(dep_delay, na.rm = TRUE)
  ),
  arr > 30 | dep > 30
)
```


Pipe Operator at full speed
=======================================================

```{r}
flights %>%
  group_by(year, month, day) %>%
    select(arr_delay, dep_delay) %>%
      summarise(arr = mean(arr_delay, na.rm = TRUE),
                dep = mean(dep_delay, na.rm = TRUE)) %>%
        filter(arr > 30 | dep > 30)
```


For more info on dplyr
=======================================================

Check out
```{r, eval = FALSE}
browseVignettes(package = "dplyr")
```


Homework (yay!)
=======================================================

See my repo on GitHub for week 6 homework!

